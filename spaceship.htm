<html>

<head>
  <title>SpaceShip</title>
  <meta http-equiv="content-type" content="text/html; charset=windows-1252">
  
  <script type="text/javascript" src="js/gl-matrix.js"></script>
  <script type="text/javascript" src="js/game/game-utils.js"></script>
  <script type="text/javascript" src="js/fbo.js"></script>
  <script type="text/javascript" src="js/background.js"></script>
  <script type="text/javascript" src="js/hero/modelObj.js"></script>
  <script type="text/javascript" src="js/sprite/sprite.js"></script>
  <script type="text/javascript" src="js/sprite/rocket.js"></script>
  <script type="text/javascript" src="js/sprite/life.js"></script>
  <script type="text/javascript" src="js/game/soundpool.js"></script>
  <script type="text/javascript" src="js/game/bonus.js"></script>
  <script type="text/javascript" src="js/game/score.js"></script>
  <script type="text/javascript" src="js/enemy/bad-guy-manager.js"></script>
  <script type="text/javascript" src="js/enemy/bad-fish.js"></script>
  <script type="text/javascript" src="js/enemy/seahorse.js"></script>
  <script type="text/javascript" src="js/enemy/shark.js"></script>
  <script type="text/javascript" src="js/enemy/nazi-shark.js"></script>
  <script type="text/javascript" src="js/sprite/background-layer.js"></script>
  <script type="text/javascript" src="js/sprite/mob.js"></script>
  <script type="text/javascript" src="js/hero/hero.js"></script>
  <script type="text/javascript" src="js/game/event.js"></script>
  <script type="text/javascript" src="js/game/lifecycle.js"></script>
  <script type="text/javascript" src="js/game/game-loop.js"></script>
  
  <script id="model-vs" type="x-shader/x-vertex">#version 300 es
    // *** le vertex shader *** 
    layout(location=0) in vec3 aVertexPosition;
    layout(location=1) in vec3 aVertexNormal;
    
    uniform mat4 uModelMatrix;
    uniform mat4 uViewMatrix;
    uniform mat4 uProjMatrix;
    uniform float timer;
    
    out vec3 vNormal;
    
    void main(void) {
      // projection de la position
      vec3 p = aVertexPosition;
      
      // exemple de modification de la hauteur du mod�le avec un simple timer
      // bien pour les petits effets, mais si possible modifier directement la
      // matrice model en amont (dans setParameters du fichier modelObj)
      //p.z += 3.0*sin(timer*10.0);
      
      gl_Position = uProjMatrix * uViewMatrix * uModelMatrix * vec4(p, 1.0);
      vNormal = mat3(inverse(transpose(uViewMatrix * uModelMatrix)))*normalize(aVertexNormal);
    }
  </script>
  
  <script id="model-fs" type="x-shader/x-fragment">#version 300 es
    // *** le fragment shader ***
    precision mediump float; // precision des nombres flottant
    uniform vec3 maCouleur;
    in vec3 vNormal;
    out vec4 outColor;
    
    void main(void) {
      // la normale (en tout point)
      vec3 n = normalize(vNormal);
      
      // une direction de lumi�re quelconque
      vec3 l = normalize(vec3(0.5,0.5,1.0));
      
      // une couleur (ex. rouge)
      vec3 Kd = vec3(0.9,0.5,0.0);
      
      // un �clairage simple
      vec3 diff = maCouleur*max(dot(n,l),0.0);
      
      // que l'on affiche en sortie
      outColor = vec4(diff,1.0);
    }
  </script>
  
  <script id="splat-vs" type="x-shader/x-vertex">#version 300 es
    // *** le vertex shader *** 
    layout(location=0) in vec3 aVertexPosition; // la position du sommet 
    layout(location=1) in vec2 aVertexCoord; // sa coordonnee de texture 
    
    uniform vec3 uPosition; // position du vaisseau
    uniform float xOffset;
    out vec2 vTextureCoord; // on souhaite rasteriser la coordonnee
    
    void main(void) {
      // projection de la position
      gl_Position = vec4(aVertexPosition.xy+uPosition.xy,uPosition.z, 1.0);
      
      
      // stockage de la coordonnee de texture
      vTextureCoord = vec2(aVertexCoord.x + xOffset, aVertexCoord.y);
    }
  </script>
  
  <script id="splat-fs" type="x-shader/x-fragment">#version 300 es
    // *** le fragment shader ***
    precision highp float; // precision des nombres flottant
    
    uniform vec3 maCouleur;
    uniform sampler2D uTex;
    
    in vec2 vTextureCoord; // recuperation de la coord rasterisee
    out vec4 outColor;
    
    void main(void) {
      // affichage d'une texture
      vec2 coord = vTextureCoord;
      
      outColor = texture(uTex,coord);
    }
  </script>
      
  <script type="text/javascript">
    let background;
    let hero;
    let badGuyManager;
    let bgParallax;
    let score;
    let bonus;
    let soundpool;

    document.onkeydown = startGame;
  </script>
      
  <style type="text/css">
    body {
      text-align: center;
      margin: 0;
      
    }
    
    #SpaceShip {
      border: none;
      width: 100%;
      height: 100%;
      
    }
  </style>
</head>
    
    
<body>
  <canvas id="SpaceShip" width="1080" height="720" style="display: none"></canvas>
  <div id="menu">
    <p>Press a key to play</p>
  </div>
</body>
    
</html>